"""edit_user_counters_table

Revision ID: 94dd16ebce46
Revises: 838239a16b8d
Create Date: 2025-05-01 21:00:42.615052

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "94dd16ebce46"
down_revision: Union[str, None] = "838239a16b8d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_counters",
        sa.Column("tg_id", sa.BigInteger(), nullable=False),
        sa.Column("period_started_at", sa.DateTime(), nullable=True),
        sa.Column("image_count", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["tg_id"], ["users.tg_id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("user_limits")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user_limits",
        sa.Column("tg_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column("image_count", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["tg_id"],
            ["users.tg_id"],
            name="user_limits_tg_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="user_limits_pkey"),
    )
    op.drop_table("user_counters")
    # ### end Alembic commands ###
