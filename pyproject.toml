[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "llm_bot"
version = "0.1.0"
description = "bot with llm integration"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aiogram>=3.18.0",
    "pydantic>=2.10.6",
    "pydantic-settings>=2.7.1",
    "sqlalchemy>=2.0.38",
    "alembic>=1.14.1",
    "ruff>=0.9.9",
    "asyncpg>=0.30.0",
    "openai>=1.65.3",
]

[project.scripts]
bot-run = "bot.main:run_main"

[tool.ruff]
line-length = 119
target-version = "py312"


[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "D", # pydocstyle
  "TD", # flake8-todos
  "FIX", # flake8-fixme
  "ANN", # flake8-annotations (handled by mypy)
  "EM", # flake8-errmsg - String literals in exceptions
  "E501", # pycodestyle - line too long (handled by formatter)
  "COM812", # forced by ruff formatter
  "ISC001", # forced by ruff formatter
  "TRY003", # long message for exceptions
  "EM101", # allow string literals for exceptions
  "EM102", # allow f-string literals for exceptions
  "FBT001",  # Boolean-typed positional argument in function definition
  "INP001", # part of an implicit namespace package. Add an `__init__.py`
  "G004", # Logging statement uses f-string
  "RUF001",
  "ERA001",
]

[tool.ruff.format]
docstring-code-format = true
